// Code generated by mockery. DO NOT EDIT.

//go:build !release

package challenges

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockRequestRateMonitor is an autogenerated mock type for the RequestRateMonitor type
type MockRequestRateMonitor struct {
	mock.Mock
}

type MockRequestRateMonitor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRequestRateMonitor) EXPECT() *MockRequestRateMonitor_Expecter {
	return &MockRequestRateMonitor_Expecter{mock: &_m.Mock}
}

// RecordRequest provides a mock function with given fields: ctx, clientID
func (_m *MockRequestRateMonitor) RecordRequest(ctx context.Context, clientID string) (RecordRequestResult, error) {
	ret := _m.Called(ctx, clientID)

	if len(ret) == 0 {
		panic("no return value specified for RecordRequest")
	}

	var r0 RecordRequestResult
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (RecordRequestResult, error)); ok {
		return rf(ctx, clientID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) RecordRequestResult); ok {
		r0 = rf(ctx, clientID)
	} else {
		r0 = ret.Get(0).(RecordRequestResult)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, clientID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRequestRateMonitor_RecordRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RecordRequest'
type MockRequestRateMonitor_RecordRequest_Call struct {
	*mock.Call
}

// RecordRequest is a helper method to define mock.On call
//   - ctx context.Context
//   - clientID string
func (_e *MockRequestRateMonitor_Expecter) RecordRequest(ctx interface{}, clientID interface{}) *MockRequestRateMonitor_RecordRequest_Call {
	return &MockRequestRateMonitor_RecordRequest_Call{Call: _e.mock.On("RecordRequest", ctx, clientID)}
}

func (_c *MockRequestRateMonitor_RecordRequest_Call) Run(run func(ctx context.Context, clientID string)) *MockRequestRateMonitor_RecordRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockRequestRateMonitor_RecordRequest_Call) Return(_a0 RecordRequestResult, _a1 error) *MockRequestRateMonitor_RecordRequest_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRequestRateMonitor_RecordRequest_Call) RunAndReturn(run func(context.Context, string) (RecordRequestResult, error)) *MockRequestRateMonitor_RecordRequest_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRequestRateMonitor creates a new instance of MockRequestRateMonitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRequestRateMonitor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRequestRateMonitor {
	mock := &MockRequestRateMonitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
